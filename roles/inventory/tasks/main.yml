---
- name: Stuff we are always going to do
  tags:
    - always
  block:

    - name: Check for our mandatory variables
      # You can create a custom credential for the mandatory variables
      ansible.builtin.assert:
        that:
          - controller_url is defined
          - controller_user is defined
          - controller_passwd is defined
        fail_msg: "Please make sure your mandatory variables are set"
        success_msg: "All mandatory variables have been set"

    - name: Get Demo instances we care about
      register: instance_info
      amazon.aws.ec2_instance_info:
        region: "{{ inventory_region }}"
        filters:
          tag:Name: "{{ inventory_vm_name }}"
          instance-state-name: [running]

    - name: Create a new token using username/password
      ansible.controller.token:
        controller_host: https://{{ controller_url }}
        controller_username: "{{ controller_user }}"
        controller_password: "{{ controller_passwd }}"
        validate_certs: false
        description: Daily Demo token
        scope: write
        state: present

- name: Adding our new vm to our inventory
  tags:
    - create
  block:

    - name: Update the AAP Managed Inventory
      loop: "{{ instance_info['instances'] }}"
      ansible.controller.host:
        controller_host: https://{{ controller_url }}
        controller_oauthtoken: "{{ controller_token }}"
        validate_certs: false
        name: "{{ item['public_dns_name'] }}"
        inventory: "{{ inventory_managed_inventory_name }}"
        state: present
        enabled: true

    - name: Create a group
      loop: "{{ instance_info['instances'] }}"
      ansible.controller.group:
        controller_host: https://{{ controller_url }}
        controller_oauthtoken: "{{ controller_token }}"
        validate_certs: false
        name: panosdemo
        description: Automation Controller Group
        inventory: "{{ inventory_managed_inventory_name }}"
        hosts: "{{ item['public_dns_name'] }}"
        preserve_existing_hosts: true

    - name: Update runtime inventory
      loop: "{{ instance_info['instances'] }}"
      ansible.builtin.add_host:
        name: "{{ item['public_dns_name'] }}"
        groups:
          - panosdemo

- name: Removing our vm from our inventory
  tags:
    - remove
  block:

    - name: Remove vm from the inventory
      loop: "{{ instance_info['instances'] }}"
      ansible.controller.host:
        controller_host: https://{{ controller_url }}
        controller_oauthtoken: "{{ controller_token }}"
        validate_certs: false
        name: "{{ item['public_dns_name'] }}"
        inventory: "{{ inventory_managed_inventory_name }}"
        state: absent

    - name: Remove inventory host groups
      loop:
        - panosdemo
      ansible.controller.group:
        controller_host: https://{{ controller_url }}
        controller_oauthtoken: "{{ controller_token }}"
        validate_certs: false
        name: "{{ item }}"
        inventory: "{{ inventory_managed_inventory_name }}"
        state: absent
