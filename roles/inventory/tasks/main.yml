---
- name: Check for our mandatory variables
  tags:
    - always
  # You can create a custom credential for the mandatory variables
  ansible.builtin.assert:
    that:
      - controller_url is defined
      - controller_user is defined
      - controller_passwd is defined
    fail_msg: "Please make sure your mandatory variables are set"
    success_msg: "All mandatory variables have been set"

- name: Get Demo instances we care about
  tags:
    - always
  register: instance_info
  amazon.aws.ec2_instance_info:
    region: "{{ inventory_region }}"
    filters:
      tag:Name: "{{ inventory_vm_name }}"
      instance-state-name: [running]

- name: Create a new token using username/password
  tags:
    - always
  ansible.controller.token:
    controller_host: https://{{ controller_url }}
    controller_username: "{{ controller_user }}"
    controller_password: "{{ controller_passwd }}"
    validate_certs: false
    description: Daily Demo token
    scope: write
    state: present

- name: Update the AAP Managed Inventory
  tags:
    - inventoryadd
  loop: "{{ instance_info['instances'] }}"
  ansible.controller.host:
    controller_host: https://{{ controller_url }}
    controller_oauthtoken: "{{ controller_token }}"
    validate_certs: false
    name: "{{ item['public_dns_name'] }}"
    inventory: "{{ inventory_managed_inventory_name }}"
    state: present
    enabled: true
    variables:
      F5_mgmt_ip: "{{ ec2_vms.instances[0].public_ip_address }}"

- name: Create a group
  tags:
    - inventoryadd
  loop: "{{ instance_info['instances'] }}"
  ansible.controller.group:
    controller_host: https://{{ controller_url }}
    controller_oauthtoken: "{{ controller_token }}"
    validate_certs: false
    name: f5demo
    description: Automation Controller Group
    inventory: "{{ inventory_managed_inventory_name }}"
    hosts: "{{ item['public_dns_name'] }}"
    preserve_existing_hosts: true
    variables:
      server_port: '8443'

- name: Update runtime inventory
  tags:
    - inventoryadd
  loop: "{{ instance_info['instances'] }}"
  ansible.builtin.add_host:
    name: "{{ item['public_dns_name'] }}"
    groups:
      - f5demo

- name: Remove vm from the inventory
  tags:
    - inventorydel
  loop: "{{ instance_info['instances'] }}"
  ansible.controller.host:
    controller_host: https://{{ controller_url }}
    controller_oauthtoken: "{{ controller_token }}"
    validate_certs: false
    name: "{{ item['public_dns_name'] }}"
    inventory: "{{ inventory_managed_inventory_name }}"
    state: absent

- name: Remove inventory host groups
  tags:
    - inventorydel
  loop:
    - f5demo
  ansible.controller.group:
    controller_host: https://{{ controller_url }}
    controller_oauthtoken: "{{ controller_token }}"
    validate_certs: false
    name: "{{ item }}"
    inventory: "{{ inventory_managed_inventory_name }}"
    state: absent
